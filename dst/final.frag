#version 300 es
precision highp float;in vec2 d;uniform sampler2D fields;uniform sampler2D color;layout(location=0)out vec4 final_fields;layout(location=1)out vec4 advected_color;vec4 g(vec2 offset) {float i=1./float(textureSize(fields,0).x);return texture(fields,d+offset*i);}const float b=0.01;const float e=1./512.;const float f=1.;uniform vec2 force_pos;uniform vec2 force_vec;const float force_size=0.01;uniform int gust_type;void main() {vec4 c=texture(fields,d);float force_factor= (1./force_size) *max(0.,force_size-dot(force_pos-d,force_pos-d));vec2 a=c.xy-b/ (2.*f*e)*vec2(g(vec2(1.,0.)).w-g(vec2(-1.,0.)).w,g(vec2(0.,1.)).w-g(vec2(0., -1.)).w) +force_factor*force_vec*b;a*=pow(0.99,b);vec4 advected_color_temp=texture(color,d-a*b*0.5);a*=pow(max(advected_color_temp.w-0.2,0.) *0.75+1.,b);advected_color_temp=vec4(advected_color_temp.x*pow(1.,b),advected_color_temp.y*pow(0.9,b),advected_color_temp.z*pow(0.9,b)+length(a) *0.01*advected_color_temp.x,advected_color_temp.w*pow(0.3,b));float more_clouds=max(0.,pow(force_factor,3.)) *abs(sign(force_vec)).x*0.5;advected_color_temp.x=advected_color_temp.x+more_clouds>0.4?max(0.4,advected_color_temp.x):advected_color_temp.x+more_clouds,advected_color=advected_color_temp;final_fields=vec4(a.xy,c.zw);}